import React, { useState, useEffect, ChangeEvent } from 'react';
import { Loader, Card, FormField } from '../components';

// Define the type for a single post
interface Post {
  _id: string;
  title: string;
  description: string;
}

// Define the props for the RenderCards component
interface RenderCardsProps {
  data: Post[];
  title: string;
}

const RenderCards: React.FC<RenderCardsProps> = ({ data, title }) => {
  if (data.length > 0) {
    return (
      <>
        {data.map((post: Post) => (
          <Card key={post._id} {...post} />
        ))}
      </>
    );
  }

  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  );
};

const Home: React.FC = () => {
  const [loading, setLoading] = useState<boolean>(false);
  const [allPosts, setAllPosts] = useState<Post[]>([]);
  const [searchText, setSearchText] = useState<string>('');

  // Mock fetch posts (replace with actual fetch logic)
  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      // Simulate fetching posts
      const fetchedPosts: Post[] = [
        { _id: '1', title: 'Post 1', description: 'Description 1' },
        { _id: '2', title: 'Post 2', description: 'Description 2' },
      ];
      setAllPosts(fetchedPosts);
      setLoading(false);
    };

    fetchPosts();
  }, []);

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          The Community Showcase
        </h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
      </div>

      <div className='mt-16'>
        <FormField
          LabelName="Search"
          type="text"
          name="search"
          placeholder="Search for a post..."
          value={searchText}
          handleChange={(e: ChangeEvent<HTMLInputElement>) => setSearchText(e.target.value)}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing results for <span className='text-[#222328]'>{searchText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards data={[]} title="No search results found" />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
